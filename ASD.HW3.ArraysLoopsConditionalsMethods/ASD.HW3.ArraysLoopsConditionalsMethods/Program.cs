using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ASD.HW3.ArraysLoopsConditionalsMethods
{
    class Program
    {
        static void Main(string[] args)
        {
            Random randomizer = new Random();
            Console.WriteLine("TASK1/n");
            //Даны два целых числа A и B (A < B). Вывести в порядке возрастания все целые числа, расположенные между A и B 
            //(включая сами числа A и B), а также количество N этих чисел.
            int numberTask1A = randomizer.Next(0, 50);
            int numberTask1B;
            do
            {
                numberTask1B = randomizer.Next(0, 50);
            } while (numberTask1A > numberTask1B);
            ShowIntegerNumbersFromToAscDesc(numberTask1A, numberTask1B, true, true);

            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK2/n");
            //Даны два целых числа A и B(A < B).Вывести в порядке убывания все целые числа, расположенные между A и B
            //(не включая числа A и B), а также количество N этих чисел.
            int numberTask2A = randomizer.Next(0, 50);
            int numberTask2B;
            do
            {
                numberTask2B = randomizer.Next(0, 50);
            } while (numberTask2A > numberTask2B);
            ShowIntegerNumbersFromToAscDesc(numberTask2A, numberTask2B, false, false);
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK3/n");
            //Начальный вклад в банке равен $1000.Через каждый месяц размер вклада увеличивается на P процентов от 
            //имеющейся суммы(P — вещественное число, 0 < P < 25).По данному P определить, через сколько месяцев размер 
            //вклада превысит $1100, и вывести найденное количество месяцев K(целое число) и итоговый размер вклада 
            //S(вещественное число).
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK4/n");
            //Дано целое число N(> 0). Сформировать и вывести целочисленный массив размера N, содержащий N первых 
            //положительных нечетных чисел: 1, 3, 5, … .
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK5/n");
            //Дан массив размера N. Вывести его элементы в обратном порядке.
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK6/n");
            //Дан целочисленный массив размера N.Вывести вначале все содержащиеся в данном массиве четные числа в порядке 
            //возрастания их индексов, а затем — все нечетные числа в порядке убывания их индексов. Также вывести количество
            //четных и нечетных членов массива.
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK7/n");
            //Дан массив A размера N(N — четное число).Вывести его элементы с четными номерами в порядке возрастания 
            //номеров: A2, A4, A6, …, AN.Условный оператор не использовать.
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK8/n");
            //Дан целочисленный массив размера N.Найти количество различных элементов в данном массиве.
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK9/n");
            //Дано целое число N(> 0). Найти произведение N! = 1·2·…·N(N–факториал).Чтобы избежать целочисленного 
            //переполнения, вычислять это произведение с помощью вещественной переменной и вывести его как вещественное
            //число.Использовать рекурсию.
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK10/n");
            //Написать метод, который считает и выводит на консоль последовательность Фибоначчи(число элементов в последовательности принимается, как входящий параметр), используя рекурсию.
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK11/n");
            //Создать метод вычисляющий количество дней в месяце определённого года(с учётом високосности года)
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK12/n");
            //Дан массив размера N. Обнулить элементы массива, расположенные между его минимальным и максимальным элементами
            //(не включая минимальный и максимальный элементы).
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK13/n");
            //Создайте массив N(случайноe число от 1 до 10) с массивами длинной М(случайноe число от 20 до 50). Заполните его
            //случайными целыми числами от 0 до 9.Выведите массив на экран.Отсортируйте каждую строку массива, по возрастанию
            //Выведите преобразованный массив на экран.
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK14/n");
            //Учитель задаёт каждому ученику пример из таблицы умножения. В классе 15 человек, примеры среди них не должны 
            //повторяться. Напишите программу/ метод, которая будет выводить на экран 15 случайных примеров из таблицы 
            //умножения(от 2 * 2 до 9 * 9).При этом среди 15 примеров не должно быть повторяющихся
            //(примеры 2 * 3 и 3 * 2 и им подобные пары считать повторяющимися).
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK15/n");
            //Создать метод проверяющий, что у переданного числа первая цифра равна последней
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK16/n");
            //Путешественник проходит каждый день несколько километров. Создать метод, выводящий на экран его путь с начала 
            //путешествия(в виде "День №1 : 10км; День №2 : 7км; День №3 : 13км; ").Метод должен работать для любого 
            //количества дней путешествия.
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK17/n");
            //Создать метод, возвращающий true, если заданное число находится "повсюду" в целочисленном массиве.Под "повсюду"
            //подразумевается, что при рассмотрении любой пары рядом стоящих элементов массива, одним из элементов будет 
            //искомое число, т.е.
            //i.isEverywhere({ 1, 2, 1, 3}, 1) → true
            //ii.isEverywhere({ 1, 2, 1, 3}, 2) → false
            //iii.isEverywhere({ 1, 2, 1, 3, 4}, 1) → false
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK18/n");
            //Создать метод, проверяющий, может ли массив быть "сбалансированным", т.е.разделённым на две части в каком-то 
            //месте, таким образом, чтобы сумма элементов одной части равнялась сумме элементов второй. Т.е.
            //i. { 1, 1, 1, 2, 1 }; // true
            //ii. { 1, 2, 3, 1, 0, 1, 3 }; // false
            //iii. { 1, 1, 1, 1, 4 }; // true
            Console.WriteLine("___________________________________");
            Console.WriteLine("TASK19/n");
            //Реализовать метод быстрой сортировки одномерного массива с помощью рекурсивного метода.

            Console.Read();
        }

        static void ShowIntegerNumbersFromToAscDesc(int from, int to, bool isIncludeFromTo, bool isAscending)
        {
            int countNumbers = 0;
            int includeCheckFrom = isIncludeFromTo ? from : from + 1;
            int includeCheckTo = isIncludeFromTo ? to : to - 1;
            if(!isAscending)
            {
                includeCheckFrom += includeCheckTo;
                includeCheckTo = includeCheckFrom;
                includeCheckFrom -= includeCheckTo;
            }
            for(int i = includeCheckFrom; i <= includeCheckTo; i++)
            {
                Console.Write($" {i} ");
                countNumbers++;
            }
            Console.WriteLine($"Number count: {countNumbers}");
        }
    }
}
